[
    {
        "question": "A traditional (or heavyweight) process has a single thread of control.",
        "options": ["True", "False"],
        "answer": 0
    },
    {
        "question": "A thread is composed of a thread ID, program counter, register set, and heap.",
        "options": ["True", "False"],
        "answer": 1
    },
    {
        "question": "Each thread has its own register set and stack.",
        "options": ["True", "False"],
        "answer": 0
    },
    {
        "question": "_________ involves distributing tasks across multiple computing cores.",
        "options": ["Concurrency", "Task parallelism", "Data parallelism", "Parallelism"],
        "answer": 1
    },
    {
        "question": "According to Amdahl's Law, what is the speedup gain for an application that is 60",
        "options": ["1.82", ".7", ".55", "1.43"],
        "answer": 3
    },
    {
        "question": "It is possible to have concurrency without parallelism.",
        "options": ["True", "False"],
        "answer": 0
    },
    {
        "question": "The ____ multithreading model multiplexes many user-level threads to a smaller or equal number of kernel threads.",
        "options": [
            "many-to-one model",
            "one-to-one model",
            "many-to-many model",
            "many-to-some model"
        ],
        "answer": 2
    },
    {
        "question": "The _____ model maps many user-level threads to one kernel thread.",
        "options": ["many-to-many", "two-level", "one-to-one", "many-to-one"],
        "answer": 3
    },
    {
        "question": "The _____ model allows a user-level thread to be bound to one kernel thread.",
        "options": ["many-to-many", "two-level", "one-to-one", "many-to-one"],
        "answer": 1
    },
    {
        "question": "A ____ provides an API for creating and managing threads.",
        "options": [
            "set of system calls",
            "multicore system",
            "thread library",
            "multithreading model"
        ],
        "answer": 2
    },
    {
        "question": "Pthreads refers to ____.",
        "options": [
            "the POSIX standard.",
            "an implementation for thread behavior.",
            "a specification for thread behavior.",
            "an API for process creation and synchronization."
        ],
        "answer": 2
    },
    {
        "question": "It is possible to create a thread library without any kernel-level support.",
        "options": ["True", "False"],
        "answer": 0
    },
    {
        "question": "A _____ uses an existing thread - rather than creating a new one - to complete a task.",
        "options": [
            "lightweight process",
            "thread pool",
            "scheduler activation",
            "asynchronous procedure call"
        ],
        "answer": 1
    },
    {
        "question": "When OpenMP encounters the #pragma omp parallel directive, it",
        "options": [
            "constructs a parallel region",
            "creates a new thread",
            "creates as many threads as there are processing cores",
            "parallelizes for loops"
        ],
        "answer": 2
    },
    {
        "question": "Grand Central Dispatch handles blocks by",
        "options": [
            "placing them on a dispatch queue",
            "creating a new thread",
            "placing them on a dispatch stack",
            "constructing a parallel region"
        ],
        "answer": 0
    },
    {
        "question": "Which of the following would be an acceptable signal handling scheme for a multithreaded program?",
        "options": [
            "Deliver the signal to the thread to which the signal applies.",
            "Deliver the signal to every thread in the process.",
            "Deliver the signal to only certain threads in the process.",
            "All of the above"
        ],
        "answer": 3
    },
    {
        "question": "Cancellation points are associated with ____ cancellation.",
        "options": ["asynchronous", "deferred", "synchronous", "non-deferred"],
        "answer": 1
    },
    {
        "question": "Thread-local storage is data that ____.",
        "options": [
            "is not associated with any process",
            "has been modified by the thread, but not yet updated to the parent process",
            "is generated by the thread independent of the thread's process",
            "is unique to each thread"
        ],
        "answer": 3
    },
    {
        "question": "Windows uses the ____.",
        "options": [
            "one-to-one model",
            "many-to-one model",
            "one-to many-model",
            "many-to-many model"
        ],
        "answer": 0
    },
    {
        "question": "Linux distinguishes between processes and threads.",
        "options": ["True", "False"],
        "answer": 1
    },
    {
        "question": "The flags like CLONE FS, CLONE VM, CLONE SIGHAND, and CLONE FILES defines which sharing will take place in the function clone().",
        "options": ["Yes", "No"],
        "answer": 0
    }
]
